""" В переменной xyz будем подсчитывать длину всех последовательностей XYZ и по ней определять ее продолжение.
В переменной current_xyz будем подсчитывать длину текущей последовательности XYZ. В переменной k будем подсчитывать
длину полезного сообщения. Если длина текущей последовательности не превышает 3, то полезное сообщение продолжает
поступать, иначе сравниваем длину текущего полезного сообщение за вычетом добавленных букв последовательности XYZ с
текущим найденным максимумом. Обратите внимание, что в данном решении после цикла не проверяется длина последней
последовательности на максимум, т.к. файл завершается последовательностью XYZ, но, если в конце файла будет полезное
сообщение, такую проверку нужно добавить. """


with open("24_9709.txt", "r", encoding="utf-8") as file:
    # Пример
    # XYZXYZXYUSEFULLMESSAGEZXYZXYZXYAVERYUSEFULLMESSAGEZXYZXYZXYZ
    text = file.read()
    k = 0
    xyz = 0
    current_xyz = 0
    maxim = 0
    for i in text:
        if (i == 'X' and xyz % 3 == 0) or (i == 'Y' and xyz % 3 == 1) or (i == 'Z' and xyz % 3 == 2):
            xyz += 1
            current_xyz += 1
            if current_xyz > 2:
                maxim = max(maxim, k - 2)
                k = 0
            else:
                k += 1
        else:
            k += 1
            if current_xyz < 3:
                xyz -= current_xyz
            current_xyz = 0
    print(maxim)
